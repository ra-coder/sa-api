swagger: '2.0'
info:
  contact:
    name: Admin
  description: 'Документация API  https://speechanalytics.ru/'
  title: SpeechAnalytics
  version: '1.0'
schemes:
  - https
paths:
  /account:
    get:
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
      responses:
        '200':
          description: OK
          schema:
            description: Проверка аккаунта
            properties:
              id:
                type: number
              status:
                type: string
            type: object
            x-examples:
              account:
                value:
                  id: 100001
                  status: VALID
      tags:
        - Аккаунт
      description: '### Узнать текущий аккаунт'
      operationId: account
      summary: Get Account
  /account/available_accounts:
    get:
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
      responses:
        '200':
          description: OK
          schema:
            items:
              description: Доступные аккаунты
              properties:
                id:
                  type: number
                name:
                  type: string
              type: object
              x-examples:
                availableAccount:
                  value:
                    id: 100203
                    name: Test Account
            type: array
      tags:
        - Аккаунт
      description: '### Список доступных аккаунтов'
      operationId: availableAccounts
      summary: Available Accounts
  '/account/change/{account_id}':
    parameters:
      - in: path
        name: account_id
        required: true
        type: string
    post:
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
      responses:
        '200':
          description: OK
      tags:
        - Аккаунт
      description: '### Смена аккаунта (проекта)'
      operationId: changeAccount
      summary: Change Account(Project)
  /async_reports/generate_excel:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
        - description: ''
          in: body
          name: body
          schema:
            properties:
              date_from:
                example: 1552942800
                format: date-time
                type: number
              date_till:
                example: 1552942800
                format: date-time
                type: number
              dimensions:
                items:
                  type: string
                type: array
              metric_filters:
                items:
                  properties:
                    label:
                      type: string
                    operator:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              metrics:
                items:
                  type: string
                type: array
              phrase_filters:
                items:
                  properties:
                    label:
                      type: string
                    min_matches:
                      type: number
                    operator:
                      type: string
                    value:
                      items:
                        type: string
                      type: array
                    vocabulary_ids:
                      items: {}
                      type: array
                  type: object
                type: array
              rating_template_id:
                type: number
              report_type:
                description: csv or xlsx
                type: string
            type: object
      responses:
        '200':
          description: OK
          schema:
            properties:
              task_id:
                type: string
            type: object
      tags: []
      description: |
        ### Выгрузка отчетов

        `metric_filters` и `phrase_filters` - фильтры в таком же формате как и на странице:

        На этой же странцие описано как получить список метрик ( GET /api/v1/metrics/list). Из этого списка нужно взять требуемые labels и получить из них список metrics.

        `Dimensions` - в этот список могут попасть следующие строки:
        ```
        type - Входящие/исходящие/внутренние
        operatorTeam - Группы операторов
        operator - Операторы
        status - Приняты/не приняты
        hour_of_day - Часы
        day_of_week - Дни недели
        rating - Оценки
        week - Недели
        month_name - Месяцы
        transcript_status - Распознаны/не распознаны
        ```
        Доступные `rating_template_id` можно получить из запроса *rating/templates*

        Вернувшийся `task_id` нужно подставить в метод `async_reports/get_result/{task_id}` для получения результата выполнения операции
      operationId: generateExcel
      summary: Выгрузка отчетов
  '/async_reports/get_result/{task_id}':
    parameters:
      - in: path
        name: task_id
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
      responses:
        '200':
          description: OK
          schema:
            properties: {}
            type: object
      tags: []
      description: |-
        ### Возвращает результат выполнения таски
        Если задача выполнена, то state будет равен **"SUCCESS"**, если ещё выполняется или стоит в очереди то: **"STARTED"**, **"PROGRESS"** или **"PENDING"**.

        А в поле result будет ссылка на отчёт (на файл в формате csv или xlsx).
      operationId: getResult
      summary: Get task result
  /async_search_phrases/find_matching_transcripts:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
        - description: 'Создается задача, возвращается task_id'
          in: body
          name: body
          schema:
            properties:
              date_from:
                type: integer
              date_till:
                type: integer
              metric_filters:
                items:
                  properties:
                    label:
                      type: string
                    operator:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              phrase_filters:
                items:
                  properties:
                    label:
                      type: string
                    min_matches:
                      type: integer
                    operator:
                      type: string
                    value:
                      items: {}
                      type: array
                    vocabulary_ids:
                      items:
                        type: integer
                      type: array
                  type: object
                type: array
            type: object
      responses:
        '200':
          description: OK
          schema:
            properties:
              task_id:
                type: string
            type: object
      tags: []
      description: |-
        date_till - начало временного промежутка поиска (timestamp - целое число)
        date_from - конец временного промежутка поиска (timestamp - целое число)
        metric_filters - количественные фильтры
        phrase_filters - фразовые фильтры
        ### metric_filters

        `metric_filters` - это список объектов, каждый из которых содержит три поля: **value**, **label** и **operator**.

        Пример `metric_filters`:
        ```
        "metric_filters":[
          {
            "value":"3",
            "label":"interjections_count_abs",
            "operator":"<"
          },
          {
            "value":["270", "210"],
            "label":"operator",
            "operator":"="
          },
          ...
        ]
        ```
      operationId: findTranscrib
      summary: Поиск по транскрибации
  '/async_search_phrases/get_result/{task_id}':
    parameters:
      - in: path
        name: task_id
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
      responses:
        '200':
          description: OK
          schema:
            properties:
              error:
                type:
                  - string
                  - 'null'
              result:
                items:
                  type: integer
                type: array
              state:
                type: string
            type: object
      tags: []
      description: |-
        Если задача выполнена, то state будет равен **"SUCCESS"**, если ещё выполняется или стоит в очереди то: **"STARTED"** или **"PENDING"**.

        А в поле **result** будет список id найденных звонков.

        Далее можно получить транскрибацию с размеченными вхождениями слов.
      operationId: getTaskResult
      summary: Статус задачи по поиску
  '/project/{project_id}/calls/calls_period':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: ''
          in: header
          name: Content-Type
          required: true
          type: string
        - description: |-
            При том `telephony_id` - это идентификатор звонка из телефонии клиента,
            а `id` - идентификатор звонка нашей системы.
            Если `"transcript_id":null`, значит транскрибация для звонка отсутствует.
          in: body
          name: body
          schema:
            properties:
              date_from:
                type: integer
              date_till:
                type: integer
            type: object
      responses:
        '200':
          description: OK
          headers: {}
          schema:
            properties:
              calls:
                items:
                  properties:
                    account_id:
                      type: integer
                    date_of_call:
                      type: integer
                    duration:
                      type: number
                    id:
                      type: integer
                    phone_number_client:
                      type: string
                    phone_number_operator:
                      type: string
                    telephony_id:
                      type: string
                    type:
                      type: string
                  type: object
                type:
                  - string
                  - array
            type: object
      tags:
        - Звонок
      description: |-
        **date_till** - начало временного промежутка (timestamp - целое число)
        **date_from** - конец временного промежутка (timestamp - целое число)
      operationId: callsPeriod
      summary: Список звонков
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
  '/calls/{call_id}':
    parameters:
      - in: path
        name: call_id
        required: true
        type: string
    get:
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
      description: "### Информация о звонке\n\nМетод позволяет получить разнообразную информацию о звонке, в том числе и информацию об оценках. Поле ratings - это словарь <ID шаблона оценок, усредненная оценка>, а поле rating_details позволяет получить оценку по каждой метрике, которая используется в шаблоне.\n\nТакже метод возвращает транскрибацию заонка в поле transcript\n\nДанный json содержит максимально полную информацию о звонке:\n\n- id\n- telephony_id - ID звонка из телефонии клиента\n- date_of_call - дата звонка\n- client, operator - номер клиента, оператора\n- ratings, rating_details - информация об оценках\n- transcript - транскрибация звонка (текст распознанного диалога)\n- а также параметры речевой активности и различные лексические (словарные) метрики\n\nЛексические метрики - это просто количество найденных фраз из определенного словаря, например: метрика 5080B475_Nekompetentnost'_operatora35684599 (Некомпетентность оператора) - это фразы: «не слышала ни разу», «мне нужно уточнить», «слышу впервые», «ранее не слышал», «не имею понятия», и т. п.\n\nПараметры речевой активности - это, например: operator_speech_duration (длительность речи оператора), interjections_count_abs (количество перебиваний), client_longest_silence_duration\t(максимальный участок молчания клиента) и т. д.\n\nПолный список параметров речевой активности: [https://www.notion.so/cee9287ca6934d75a0f9850e5c85d737](https://www.notion.so/cee9287ca6934d75a0f9850e5c85d737)\nМоменты, которые вызывают вопросы:\n\n1. Чем отличаются метрики с _abs и без?\nМетрики с суффиксом _abs созданы для внутренних целей, они в точности равны тем же метрикам но без этого суффикса.\n2. Как считается длительность перебивания? (interjections_duration)\nДорожка клиента и оператора накладываются друг на друга и считается суммарная длина отрезков, в которые попали оба голоса.\n3. Что такое freezing?\nЭто метрика залипания (считается, что «залип» клиент, если он молчал больше 7,5 секунд после речи оператора).\n4. Что такое speech_rate?\nЭто скорость речи, измеряется в словах в минуту.\n\nratings для каждого rating_template_id (Шаблона оценок) содержит усреднённую оценку по данному шаблону, а rating_details содержит для каждого rating_template_id список метрик с оценками, входящих в этот шаблон."
      operationId: callId
      summary: Call
      responses:
        '200':
          description: OK
      tags:
        - Звонок
  '/calls/{call_id}/transcript':
    parameters:
      - in: path
        name: call_id
        required: true
        type: string
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
        - description: ''
          in: body
          name: body
          schema:
            properties:
              label:
                type: string
              min_matches:
                type: integer
              operator:
                type: string
              value:
                items: {}
                type: array
              vocabulary_ids:
                items:
                  type: integer
                type: array
            type: object
      responses:
        '200':
          description: OK
          schema:
            properties:
              call_id:
                type: integer
              detailed_matches:
                items:
                  properties:
                    matches:
                      type: integer
                    phrase:
                      type: string
                  type: object
                type: array
              highlights:
                items:
                  properties:
                    matches:
                      items:
                        properties:
                          length:
                            type: integer
                          phrase:
                            type: integer
                          role:
                            type: string
                          symbol:
                            type: integer
                        type: object
                      type: array
                    search_phrase_id:
                      type: integer
                  type: object
                type: array
              matches:
                type: integer
              transcript:
                type: array
            type: object
      tags:
        - Звонок
      description: |-
        **detailed_matches** - список, сколько раз какое слово найдено

        **highlights** - размеченные вхождения.

        phrase - номер реплики (нумерация с 0)

        symbol - номер первого символа вхождения

        length - длина вхождения (в символах)

        role - кто произнес реплику ("client" / "operator")

        **matches** - количество вхождений

        **transcript** - транскрибация звонка
      operationId: callTranscript
      summary: Транскрибация с разметкой
  '/calls/{call_id}/transcript_lite':
    parameters:
      - in: path
        name: call_id
        required: true
        type: string
    post:
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
      responses:
        '200':
          description: OK
          schema:
            properties:
              call_id:
                type: string
              transcript:
                type: array
            type: object
        '404':
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
      tags:
        - Звонок
      description: |-
        ### Выгрузка транскрибации

        Для пользования этим методом необходимо авторизоваться, то есть оба запроса (запрос авторизации и запрос выгрузки) должны быть в одной сессии.
      operationId: transcriptLite
      summary: Выгрузка транскрибации
    get:
      summary: ''
      responses:
        '200':
          description: OK
  /metrics/list:
    get:
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
      responses:
        '200':
          description: OK
          schema:
            properties:
              metrics:
                items:
                  properties:
                    aggregate:
                      items:
                        type: string
                      type: array
                    description:
                      type: string
                    filter:
                      type: string
                    is_lexical:
                      type: boolean
                    label:
                      type: string
                    name:
                      type: string
                    parent:
                      type: string
                    rateable:
                      type: boolean
                    relative:
                      type: boolean
                    show_plot:
                      type: boolean
                    show_tabl:
                      type: boolean
                    unit:
                      type: string
                  type: object
                type: array
            type: object
          examples:
            example-1: {}
      tags: []
      description: "Выбираем **label** из списка и конструируем объект `metric_filters`. Если `filter.type == range`, то в качестве значения поля **operator** можно выбрать только '**<**' или '**>**', а поля **value** - неотрицательные числа. А если `filter.type == multiselect`, то **operator** - только '**=**', **value** - подсписок списка `filter.choices`. В `metric_filters` можно использовать только не `is_lexical` метрики.\n\nТакже можно фильтровать по номеру клиента (`\"label\":\"client\"`) для этого искомые номера необходимо перечислить в списке **value**, а **operator** задать как '**=**'.\n\n### phrase_filters\n\n`phrase_filters` - список объектов со следующими полями:\n```\nlabel - всегда равен \"phrases\"\noperator - \"operator_include\", \"client_include\" или \"both_include\"- искать \nпо каналу оператора, клиента или по обоим каналам\nvalue - список искомых фраз\nmin_matches - минимальное количество совпадений (целое положительное число)\nvocabulary_ids - список id словарей, по которым будет производиться поиск\n```\nПример:\n```\n{\"phrase_filters\":[\n\t{\n          \"operator\":\"both_include\",\n          \"value\":[],\n          \"label\":\"phrases\",\n          \"min_matches\":2,\n          \"vocabulary_ids\":[425848,179389]\n        },\n        {\n          \"operator\":\"operator_include\",\n          \"value\":[\"Отлично\", \"Добрый день\"],\n          \"label\":\"phrases\",\n          \"min_matches\":1,\n          \"vocabulary_ids\":[]\n        }\n]}\n```\nВ примере в первом случае поиск будет производиться по двум словарям: \"Некомпетентность оператора\" и \"Оператор просит прощения\", в звонке должно найтись по крайней мере суммарно 2 слова из этих словарей. Во втором случае поиск будет только по каналу оператора, в звонках должна найтись хотя бы одна из фраз \"Отлично\" или \"Добрый день\". В результате работы метода будут звонки, которые нашлись одновременно и в первом и во втором случаях.\n"
      operationId: metricList
      summary: Список возможных фильтров
  '/project/{project_id}/rating/templates':
    get:
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
      responses:
        '200':
          description: OK
          schema:
            items:
              properties:
                decription:
                  type: string
                frozen:
                  type: boolean
                functions:
                  items: {}
                  type: array
                id:
                  type: number
                name:
                  type: string
              type: object
            type: array
      tags:
        - Шаблоны оценки
      description: '### Список доступных шаблонов оценок'
      operationId: ratingTemplates
      summary: Список доступных шаблонов оценок
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
  /vocabularies:
    get:
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
      responses:
        '200':
          description: OK
          schema:
            properties:
              vocabularies:
                items:
                  properties:
                    description:
                      type: string
                    id:
                      type: integer
                    name:
                      type: string
                    role:
                      type: string
                  type: object
                type: array
            type: object
      tags: []
      description: словари
      operationId: vocabularies
      summary: Список доступных словарей
  /reports/triggers:
    post:
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
      responses:
        '200':
          description: OK
          schema:
            properties:
              triggers:
                items:
                  properties:
                    endpoint_url:
                      type: string
                    id:
                      type: integer
                    report_id:
                      type: integer
                    report_name:
                      type: string
                  type: object
                type: array
            type: object
          examples:
            example-1: {}
      summary: Список подписок на триггеры
      operationId: triggerList
      description: Создание подписки на триггер
      tags:
        - Триггеры
  '/reports/trigger/{trigger_id}/delete':
    parameters:
      - in: path
        name: trigger_id
        required: true
        type: string
    post:
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
      responses:
        '200':
          description: OK
      description: |-
        Пример:

            POST /api/v1/reports/trigger/2/delete
      summary: Удаление подписки на триггеры
      operationId: triggerSubcribtionRemove
      tags:
        - Триггеры
  /reports/trigger:
    post:
      consumes:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
        - in: body
          name: body
          schema:
            properties:
              endpoint_url:
                type: string
              report_id:
                type: integer
            type: object
      description: |-
        Метод принимает json-объект с параметрами:
        ```
        report_id - идентификатор отчета
        endpoint_url - url на который будут отправляться звонки
        ```
      summary: Подписка на триггеры
      operationId: triggerSubscription
      responses:
        '200':
          description: OK
      tags:
        - Триггеры
  /reports:
    get:
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
      responses:
        '200':
          description: OK
          schema:
            properties: {}
            type: object
      tags:
        - Отчеты
      summary: Отчеты
      description: "Это API позволяет получать информацию по избранным звонкам: как только\n    приходит новый звонок, удовлетворяющий фильтрам отчета, система отправляет\n    информацию по звонку на указанный сервер.\n\n\n    ### Схема работы с API:\n\n\n    1. Получить список отчетов через метод `/reports`\n\n    2. Выбрать нужные отчеты и создать по ним триггеры с помощью метода\n    `/reports/trigger`, указав при этом номер отчета и url-адрес, на который\n    будут отправляться POST-запросы с данными о звонках.\n\n    3. Принимать и обрабатывать сообщения со звонками.\n\n\n    ## Специальные триггеры\n\n\n    Можно использовать готовые интеграции на основе триггеров со сторонними\n    системами. \n\n    Для этого надо указать \"специальный\" endpoint_url для подписки на триггеры.\n\n\n    ### MarketingHub\n\n\n    Для [marketinghub.ru](http://marketinghub.ru/) можно настроить экспорт\n    телефонных номеров клиентов из звонков, попавших в отчет в аудиторию для\n    последующего таргетинга рекламы.\n\n    В качестве endpoint_url надо указать урл вида marketinghub://<access_token>\n\n\n    ### Usedesk\n\n\n    Для [usedesk.ru](http://usedesk.ru/) можно настроить пересылку транскрибаций\n    звонков, попавших в отчет. В качестве endpoint_url надо указать урл вида\n    usedesk://<api_token>@api.usedesk.ru/\n\n\n    ## Обработка сообщений\n\n\n    Endpoint указанный в запросе должен принимать на вход json со следующими\n    полями:\n\n        report_id - id отчёта\n        calls - список звонков, где каждый звонок - это объект со следующими полями:\n        \n        id - внутренний id звонка Speech Analytics\n        telephony_id - id звонка из телефонии\n        date_of_call - дата звонка\n        phone_number_client - номер клиента\n        phone_number_operator - номер оператора\n        operator_name - имя оператора\n        transcript - транскрибация звонка (текст распознанного диалога)\n\n    Пример:\n\n        {\n           \"report_id\":12345678,\n           \"calls\":[\n              {\n                 \"id\":1482470,\n                 \"telephony_id\":\"1557839653.1800447\",\n                 \"date_of_call\":1557839654,\n                 \"phone_number_client\":\"+79261708580\",\n                 \"phone_number_operator\":\"270\",\n                 \"transcript\":[...]\n              },\n              {\n                 \"id\":1481981,\n                 \"telephony_id\":\"1557829764.1796966\",\n                 \"date_of_call\":1557829764,\n                 \"phone_number_client\":\"+79261708580\",\n                 \"phone_number_operator\":\"270\",\n                 \"transcript\":[\n                       {\n                          \"phrase\":\"Добрый день\",\n                          \"timeEnd\":0.5100000000000051,\n                          \"timeBegin\":0.2700000000000031,\n                          \"role\":\"client\"\n                       },\n                       {\n                          \"phrase\":\"Здравствуйте\",\n                          \"timeEnd\":4.1,\n                          \"timeBegin\":1.46,\n                          \"role\":\"operator\"\n                       },\n                       {\n                          \"phrase\":\"Через час перезвоните, пожалуйста.\",\n                          \"timeEnd\":10.890000000000008,\n                          \"timeBegin\":5.190000000000005,\n                          \"role\":\"client\"\n                       },\n                       {\n                          \"phrase\":\"Так через час\",\n                          \"timeEnd\":13.860000000000001,\n                          \"timeBegin\":11.55,\n                          \"role\":\"operator\"\n                       },\n                       ...\n                  ],\n              },\n              ...\n           ]\n        }\n\n    Ответ на запрос тоже должен быть в json-формате, ожидается следующий ответ:\n\n        {\"success\": true}\n\n    Подробную информацию о звонке можно получить с помощью GET-запроса\n    `/api/v1/calls/{id звонка}`\n\n\n    # Примеры триггеров:\n\n\n    ### **Пример 1. Молниеносное оповещение о технических проблемах на сайте\n    компании.**\n\n\n    Клиент зашел на сайт компании, перешел на страницу ЖК, но не смог записаться\n    на демонстрацию объекта. Он позвонил по указанному на сайте телефонному\n    номеру и сообщил, что «**`На сайте проблема, я не смог записаться на\n    демонстрацию`**» и попросил записать его по телефону. \n\n    **Действие:** Через 5 минут этот звонок попал в отчет \"`**Проблемы на\n    сайте**`\" по фразе клиента из звонка \"`**на сайте проблема**`\". Мы сразу же\n    по данному событию отправили IT-специалисту письмо либо создали тикет в\n    поддержке с задачей проверить информацию из звонка клиента. Включили в тикет\n    название отчета, номер клиента, дату звонка, ссылку на запись звонка,\n    транскрибацию диалога.\n\n\n    ### **Пример 2. Маркетинговые активности на основе того, что говорит ваш\n    клиент.**\n\n\n    Клиент позвонил застройщику и уточнил какие варианты квартир есть в \"`**ЖК\n    Дикий Запад**`\", также сказал, что обязательно нужен \"**`подземный\n    паркинг`**\". Менеджер дал всю необходимую информацию и клиент пошел думать. \n\n    **Действие:** Этот звонок через 5 минут попал в отчеты «`**ЖК Дикий\n    Запад**`» и «**`Подземный паркинг`**» по произнесенным клиентом ключевым\n    словам. По данному событию мы тут же передали телефон клиента в аудитории\n    рекламной площадки Facebook Ads. Одна аудитория используются в связке с\n    креативами где мы продаем ЖК Дикий Запад, а вторая демонстрирует, что можно\n    получить скидку на паркинг 50% при оплате квартиры и паркинга до конца\n    месяца. Таким образом мы моментально подогреваем клиента для продажи.\n\n\n    ### **Пример 3. Как узнать об ошибке менеджера и спасти сделку с клиентом за\n    5 минут.**\n\n\n    На финальной стадии сделки клиент позвонил менеджеру и спросил \"`**Почему в\n    договоре отсутствует обещанная скидка**`\". Менеджер сказал, что скидки\n    больше не действуют. Клиент очень расстроился и отказался от сделки. \n\n    **Действие:** Этот звонок через 5 минут попал в отчет \"**`Невыполненные\n    обещания`**\" и тут же отправилось письмо и смс руководителю отдела продаж с\n    детальной информацией в том числе, кто был менеджер. Руководитель отдела\n    связался с менеджером, дальше с клиентом и вернул сделку."
      operationId: reports
  /calls:
    get:
      parameters:
        - type: string
          in: query
          name: telephony_id
          description: id звонка из телефонии
      description: '-'
      responses:
        '200':
          description: OK
      summary: Звонки
      operationId: calls
      tags:
        - Отчеты
        - Звонок
    parameters: []
  /auth/login:
    post:
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - description: ''
          in: body
          name: body
          schema:
            properties:
              password:
                type: string
              username:
                type: string
            type: object
      responses:
        '200':
          description: OK
          schema:
            properties:
              success:
                type: boolean
            type: object
            x-examples:
              example-1:
                value:
                  success: true
      tags:
        - Авторизация
      description: |-
        В ответе есть директива **set-cookie** эту куку надо использовать во всех последующих запросах. |
        Время жизни cookie - 1 год.
      operationId: Login
      summary: Login
  '/account/{account_id}/groups':
    parameters:
      - type: integer
        name: account_id
        in: path
        required: true
    get:
      summary: Группы операторов
      tags:
        - Операторы
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              groups:
                type: array
                items:
                  $ref: ../common/models/operatogroup.v1.yaml
          examples:
            Пример:
              groups:
                - id: 463
                  name: Продажи
                - id: 464
                  name: (Без группы)
                  default: true
                - id: 500
                  name: Prodaji
                  telephony: true
      description: Список групп операторов у аккаунта
      parameters:
        - type: string
          in: header
          name: Authorization
          description: basic autorisation for dev stends
        - type: string
          in: header
          name: Cookie
          required: true
          description: session_id cookie
      operationId: operator_groups
  '/project/{project_id}/users':
    post:
      summary: Добавление/удаление пользователей в проекте
      tags:
        - ACL
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              users:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                    acl:
                      type: object
                      required:
                        - role
                      properties:
                        role:
                          type: string
                        billing:
                          type: string
                        info:
                          type: string
                        acl:
                          type: string
                        operators:
                          type: string
                        integration:
                          type: string
                        new_reports:
                          type: string
                        new_templates:
                          type: string
                  required:
                    - username
                    - acl
          examples:
            Пример ответа:
              users:
                - username: ra@speech.one
                  first_name: Александр
                  last_name: ''
                  acl:
                    billing: write
                    info: write
                    acl: write
                    operators: write
                    integration: write
                    new_reports: write
                    new_templates: write
                - username: aa@speech.one
                  first_name: Алексей
                  last_name: К
                  acl:
                    billing: read
                    info: write
                    new_reports: read
                    new_templates: read
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties: {}
          x-examples:
            Пример запроса:
              users:
                - username: aa@speech.one
                  acl:
                    billing: read
                    info: write
        - in: body
          name: body
          schema:
            type: object
            properties:
              users:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                    acl:
                      type: object
                      required:
                        - role
                      properties:
                        role:
                          type: string
                        billing:
                          type: string
                        info:
                          type: string
                        acl:
                          type: string
                        operators:
                          type: string
                        integration:
                          type: string
                        new_reports:
                          type: string
                        new_templates:
                          type: string
                  required:
                    - username
                    - acl
          x-examples:
            example-1: {}
      operationId: post_users
      description: '-'
    get:
      summary: Пользователи с доступом к проекту
      tags:
        - ACL
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              users:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                    acl:
                      type: object
                      required:
                        - role
                      properties:
                        role:
                          type: string
                        billing:
                          type: string
                        info:
                          type: string
                        acl:
                          type: string
                        operators:
                          type: string
                        integration:
                          type: string
                        new_reports:
                          type: string
                        new_templates:
                          type: string
                  required:
                    - username
                    - acl
          examples:
            Пример:
              users:
                - username: ra@speech.one
                  first_name: Александр
                  last_name: ''
                  acl:
                    role: supervisor
                    billing: write
                    info: write
                    acl: write
                    operators: write
                    integration: write
                    new_reports: write
                    new_templates: write
                - username: aa@speech.one
                  first_name: Алексей
                  last_name: К
                  acl:
                    role: analyst
                    billing: read
                    info: write
                    new_reports: read
                    new_templates: read
                - username: demo@speech.one
                  first_name: demo
                  last_name: ''
                  acl:
                    role: demo
      description: '-'
      operationId: get_users
    parameters:
      - type: integer
        name: project_id
        in: path
        required: true
  '/project/{project_id}/acl':
    parameters:
      - type: integer
        name: project_id
        in: path
        required: true
    get:
      summary: Права доступа к отчетам и шаблонам
      tags:
        - ACL
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
          examples:
            Пример:
              templates:
                - id: 100500
                  name: 100 бальный продажи
                  users:
                    ra@speech.one: write
                    ak@speech.one: read
              reports:
                - id: 100300
                  name: Продажи
                  users:
                    ra@speech.one: write
                    ak@speech.one: read
      operationId: get_acl
      description: '-'
    post:
      summary: 'Управление правами доступа к  отчетам и шаблонам '
      tags:
        - ACL
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties: {}
          x-examples:
            Пример:
              templates:
                - id: 100500
                  name: 100 бальный продажи
                  users:
                    ra@speech.one: write
                    ak@speech.one: write
              reports:
                - id: 100300
                  name: Продажи
                  users:
                    ra@speech.one: write
        - in: body
          name: body
          schema:
            type: object
            properties: {}
          x-examples:
            example-1: {}
      operationId: post_acl
      description: '-'
  /available_projects:
    get:
      summary: Получить список доступных проектов
      tags:
        - Проекты
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
          examples:
            Пример:
              id: 105010
              name: SpeechAnalytics
      description: 'TODO: надо так же возвращать права пользователя в аккаунте, чтобы скрывать какие-то элементы интерфейса'
  '/project/{project_id}/telephony/download_operators':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
    post:
      summary: 'Загрузить операторов из телефонии '
      tags:
        - Операторы
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              groups:
                type: array
                items: {}
              operators:
                type: array
                items: {}
          examples:
            example-1: {}
  '/project/{project_id}/enable_recognition_date':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
    post:
      summary: Поменять дату старта распознования
      tags:
        - Настройки
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              date:
                type: integer
          examples:
            example-1:
              date: 100500
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              date:
                type: integer
          x-examples:
            example-1:
              date: 100500
        - in: body
          name: body
          schema:
            type: object
            properties:
              date:
                type: integer
          x-examples:
            example-1: {}
    get:
      summary: Текущая дата старта распознования
      tags:
        - Настройки
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              date:
                type: integer
  '/project/{project_id}/settings/telephony/check':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
    post:
      summary: Проверка подключения к телефонии
      tags:
        - Настройки
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
      description: Проверить подключение к телефонии
  '/downloads/{filename}':
    parameters:
      - type: string
        name: filename
        in: path
        required: true
    get:
      summary: Скачать файл по ранее полученному имени
      tags: []
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
  '/project/{project_id}/reports/{report_id}':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
      - type: string
        name: report_id
        in: path
        required: true
    delete:
      summary: Удалить отчет
      tags:
        - Отчеты
      responses: {}
    post:
      summary: Создать отчет
      tags:
        - Отчеты
      responses: {}
    put:
      summary: Изменить отчет
      tags:
        - Отчеты
      responses: {}
  '/project/{project_id}/reports':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
    get:
      summary: Получить список отчетов
      tags:
        - Отчеты
      responses: {}
  '/recording/async/download/{call_id}':
    post:
      summary: Начать загрузку звонка
      tags:
        - Звонок
      responses: {}
    parameters:
      - type: string
        name: call_id
        in: path
        required: true
  '/recording/async/signals/{call_id}':
    parameters:
      - type: string
        name: call_id
        in: path
        required: true
    post:
      summary: Начать расчет осцилограмм
      tags:
        - Звонок
      responses: {}
  '/recording/async/get_result/{task_id}':
    parameters:
      - type: string
        name: task_id
        in: path
        required: true
    get:
      summary: Получить статус инициорованной задачи
      tags:
        - Звонок
      responses: {}
  '/project/{project_id}/rating/templates/{rating_template_id}':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
      - type: string
        name: rating_template_id
        in: path
        required: true
    delete:
      summary: Удалить шаблон оценки
      tags:
        - Шаблоны оценки
      responses: {}
    get:
      summary: Получить шаблон оценки
      tags:
        - Шаблоны оценки
      responses: {}
    post:
      summary: Добавить шаблон оценки
      tags:
        - Шаблоны оценки
      responses: {}
    put:
      summary: Изменить шаблон оценки
      tags:
        - Шаблоны оценки
      responses: {}
  '/project/{project_id}/rating/generate_metric_label':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
    post:
      summary: Получить metric_label для новой метрики в шаблоне
      tags:
        - Шаблоны оценки
      responses: {}
  '/project/{project_id}/rating/templates/check_existence':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
    get:
      summary: Проверить есть ли шаблон по id/имени
      tags:
        - Шаблоны оценки
      responses: {}
  '/project/{project_id}/rating/recalculation/start/{template_id}':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
      - type: string
        name: template_id
        in: path
        required: true
    post:
      summary: Запустить пересчет оценок
      tags:
        - Шаблоны оценки
      responses: {}
  '/project/{project_id}/rating/recalculation/stop/{rating_template_id}':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
      - type: string
        name: rating_template_id
        in: path
        required: true
    post:
      summary: Остановить пересчет оценок
      tags:
        - Шаблоны оценки
      responses: {}
  '/project/{project_id}/payment/history':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
    get:
      summary: История пополнений баланса
      tags:
        - Оплата
      responses: {}
  '/project/{project_id}/payment/discounts':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
    get:
      summary: Тарифы при разных суммах пополнения
      tags:
        - Оплата
      responses: {}
  '/project/{project_id}/payment/bill/recognition_minutes':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
    post:
      summary: Сгенирировать счет
      tags:
        - Оплата
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
      description: ''
  '/calls/{call_id}/karaoke_timings':
    parameters:
      - type: string
        name: call_id
        in: path
        required: true
    post:
      summary: Время для караоке
      tags:
        - Звонок
      responses: {}
    get:
      summary: Время для караоке
      tags:
        - Звонок
      responses: {}
  '/project/{project_id}/calls/id':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
    get:
      summary: 'Найти звонок по id из телефонии '
      tags:
        - Звонок
      responses: {}
      parameters:
        - type: string
          in: query
          name: telephony_id
          required: true
  /auth/registration:
    post:
      summary: Создать нового пользователя
      tags:
        - Авторизация
      responses: {}
  /auth/check_email:
    post:
      summary: Проверить свободность email для создания нового пользователя
      tags:
        - Авторизация
      responses: {}
  /auth/logout:
    post:
      summary: Выйти из ситемы
      tags:
        - Авторизация
      responses: {}
  /async_reports/generate_node:
    post:
      summary: Получить данные для отображения блока в отчете
      tags:
        - Отчеты
      responses: {}
  /async_reports/generate_calls:
    post:
      summary: Получить звонки для отображения блока в отчете
      tags:
        - Отчеты
      responses: {}
  /async_reports/generate_plot:
    post:
      summary: Получить данныее отображения графика в отчете
      tags:
        - Отчеты
      responses: {}
  '/project/{project_id}/settings':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
    post:
      summary: Изменить настройки интеграции и операторов
      tags:
        - Настройки
      responses: {}
    get:
      summary: Получить настройки интеграции и операторов
      tags:
        - Настройки
      responses: {}
  '/project/{project_id}':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
    get:
      summary: Получить данные проекта
      tags:
        - Аккаунт
      responses: {}
  '/project/{project_id}/balance':
    parameters:
      - type: string
        name: project_id
        in: path
        required: true
    get:
      summary: Получить баланс минут распознования
      tags:
        - Аккаунт
        - Оплата
      responses: {}
definitions: {}
securityDefinitions: {}
x-components: {}
host: cloud.speechanalytics.ru
basePath: /api/v1
